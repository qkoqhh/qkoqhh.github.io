<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>cf1111D(可逆背包)</title>
      <link href="/cf1111D/"/>
      <url>/cf1111D/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://codeforces.com/problemset/problem/1111/D" target="_blank" rel="noopener">http://codeforces.com/problemset/problem/1111/D</a></p><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定一个长度为偶数的的字符串(仅包含字母)，可以随意交换任意两个字符，先要将字符串分成左右两半部分，给定 $q$ 个询问，每个询问包含 $x$ 和 $y$ ，要求满足下述要求的排列方案数：</p><ol><li>同一种字符不同时出现在字符串左右两半</li><li>$x$ 、 $y$ 代表的字符应出现在同一侧</li></ol><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>事实上只要考虑哪些字符出现在左半部分就可以了然后再对这些字符分别进行排列，而排列方案数总是固定的，为 $\frac{\frac{n}{2}!\frac{n}{2}!}{\prod a_i!}$ (其中$a_i$为i字符出现的个数)。</p><p>然后就转化成一个01计数背包了，由于这个背包是可逆的，所以我们把物品装进去之后再去撤销。直接插销复杂度是 $O(qn)$ 不能接受，仔细分析询问种类最多只有 $52*52$ 种，那么直接预处理这些情况就可以了，复杂度为 $O(52^2n)$ 。实际上复杂度没有那么高，因为我们只要求背包里某一个特定的值，而撤销背包的表达式比较简单，所以可以手动算出要求的那一项，这样撤销的复杂度可以降成 $O(n/v)$ ，为了避免极限数据的出现可以排序去重，然后复杂度可以降至 $O(52nlogn)$ 。</p><p><br></p><p><br></p><p><br></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="hljs highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/**<br> *　　　　　　  　　┏┓　　 　┏┓<br> * 　　　　　  　　┏┛┗━━━━━━━┛┗━━━┓<br> * 　　　　　  　　┃　　　　　　　┃ 　<br> * 　　　　　  　　┃　　　━　　 　┃<br> * 　　　　　  　　┃　＞　　　＜　┃<br> * 　　　　　  　　┃　　　　　　　┃<br> * 　　　　　  　　┃...　⌒　... 　┃<br> * 　　　　　　  　┃              ┃<br> * 　　　　　　  　┗━┓          ┏━┛<br> * 　　　　　　　　　┃          ┃　Code is far away from bug with the animal protecting　　　　　　　　　　<br> * 　　　　　　　　　┃          ┃   神兽保佑,代码无bug<br> * 　　　　　　　　　┃          ┃　　　　　　　　　　　<br> * 　　　　　　　　　┃          ┃  　　　　　　<br> * 　　　　　　　　　┃          ┃<br> * 　　　　　　　　　┃          ┃　　　　　　　　　　　<br> * 　　　　　　　　　┃          ┗━━━┓<br> * 　　　　　　　　　┃              ┣┓<br> * 　　　　　　　　　┃              ┏┛<br> * 　　　　　　　　　┗┓┓┏━━━━━━━━┳┓┏┛<br> * 　　　　　　　　　　┃┫┫       ┃┫┫<br> * 　　　　　　　　　　┗┻┛       ┗┻┛<br> */</span> <br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bitset&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> inc(i,l,r) for(int i=l;i&lt;=r;i++)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> dec(i,l,r) for(int i=l;i&gt;=r;i--)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> link(x) for(edge *j=h[x];j;j=j-&gt;next)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mem(a) memset(a,0,sizeof(a))</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> eps 1e-8</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> succ(x) (1&lt;&lt;x)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> lowbit(x) (x&amp;(-x))</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> sqr(x) ((x)*(x))</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mid (x+y&gt;&gt;1)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> NM 100005</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> nm 200005</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> pi 3.1415926535897931</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> inf=<span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function">ll <span class="hljs-title">read</span><span class="hljs-params">()</span></span>&#123;<br>    ll x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<span class="hljs-keyword">char</span> ch=getchar();<br>    <span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(ch))&#123;<span class="hljs-keyword">if</span>(ch==<span class="hljs-string">'-'</span>)f=<span class="hljs-number">-1</span>;ch=getchar();&#125;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(ch))x=x*<span class="hljs-number">10</span>+ch-<span class="hljs-string">'0'</span>,ch=getchar();<br>    <span class="hljs-keyword">return</span> f*x;<br>&#125;<br> <br> <br><br><br><br><br>ll ans,p[NM],inv[NM],invp[NM];<br><span class="hljs-keyword">char</span> s[NM];<br><span class="hljs-keyword">int</span> n,m,a[<span class="hljs-number">53</span>],_x,_y,d[<span class="hljs-number">53</span>][<span class="hljs-number">53</span>];<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tmp</span>&#123;</span><br>    <span class="hljs-keyword">int</span> d[NM];<br>    <span class="hljs-keyword">void</span> <span class="hljs-keyword">operator</span>*=(<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span>&amp;t)&#123;dec(i,n,t)d[i]+=d[i-t],d[i]%=inf;&#125;<br>    <span class="hljs-keyword">void</span> <span class="hljs-keyword">operator</span>/=(<span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span>&amp;t)&#123;inc(i,t,n)d[i]-=d[i-t],d[i]%=inf;&#125;<br>&#125;cnt[<span class="hljs-number">53</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">fun</span><span class="hljs-params">(<span class="hljs-keyword">char</span> t)</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">'a'</span>&lt;=t&amp;&amp;t&lt;=<span class="hljs-string">'z'</span>?t-<span class="hljs-string">'a'</span>+<span class="hljs-number">1</span>:t-<span class="hljs-string">'A'</span>+<span class="hljs-number">27</span>;&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>,s+<span class="hljs-number">1</span>);n=<span class="hljs-built_in">strlen</span>(s+<span class="hljs-number">1</span>);<br>    p[<span class="hljs-number">0</span>]=invp[<span class="hljs-number">0</span>]=inv[<span class="hljs-number">1</span>]=invp[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    inc(i,<span class="hljs-number">1</span>,n)p[i]=p[i<span class="hljs-number">-1</span>]*i%inf;<br>    inc(i,<span class="hljs-number">2</span>,n)inv[i]=inv[inf%i]*(inf-inf/i)%inf,invp[i]=invp[i<span class="hljs-number">-1</span>]*inv[i]%inf;<br>    inc(i,<span class="hljs-number">1</span>,n)a[fun(s[i])]++;<br>    n&gt;&gt;=<span class="hljs-number">1</span>;<br>    ans=p[n]*p[n]%inf;<br>    inc(i,<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)ans*=invp[a[i]],ans%=inf;<br>    ans&lt;&lt;=<span class="hljs-number">1</span>;ans%=inf;<br>    cnt[<span class="hljs-number">0</span>].d[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    inc(i,<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)<span class="hljs-keyword">if</span>(a[i])cnt[<span class="hljs-number">0</span>]*=a[i];<br>    inc(i,<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)<span class="hljs-keyword">if</span>(a[i])cnt[i]=cnt[<span class="hljs-number">0</span>],cnt[i]/=a[i];<br>    inc(i,<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)<span class="hljs-keyword">if</span>(a[i])inc(j,i+<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)<span class="hljs-keyword">if</span>(a[j])&#123;<br><span class="hljs-keyword">int</span> t=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=n;k&gt;=<span class="hljs-number">0</span>;k-=a[j],t=-t)<br>    d[i][j]+=t*cnt[i].d[k],d[i][j]%=inf;<br>    &#125;<br>    inc(i,<span class="hljs-number">1</span>,<span class="hljs-number">52</span>)inc(j,<span class="hljs-number">1</span>,i<span class="hljs-number">-1</span>)d[i][j]=d[j][i];<br>    m=read();<span class="hljs-keyword">while</span>(m--)&#123;<br>_x=read();_y=read();<br><span class="hljs-keyword">if</span>(s[_x]==s[_y])<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,(cnt[fun(s[_x])].d[n]+inf)*ans%inf);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,(d[fun(s[_x])][fun(s[_y])]+inf)*ans%inf);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><br></p><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>D. Destroy the Colony<br>time limit per test<br>2 seconds<br>memory limit per test<br>512 megabytes<br>input<br>standard input<br>output<br>standard output</p><p>There is a colony of villains with several holes aligned in a row, where each hole contains exactly one villain.</p><p>Each colony arrangement can be expressed as a string of even length, where the 𝑖<br>-th character of the string represents the type of villain in the 𝑖</p><p>-th hole.</p><p>Iron Man can destroy a colony only if the colony arrangement is such that all villains of a certain type either live in the first half of the colony or in the second half of the colony.</p><p>His assistant Jarvis has a special power. It can swap villains of any two holes, i.e. swap any two characters in the string; he can do this operation any number of times.</p><p>Now Iron Man asks Jarvis 𝑞<br>questions. In each question, he gives Jarvis two numbers 𝑥 and 𝑦. Jarvis has to tell Iron Man the number of distinct colony arrangements he can create from the original one using his powers such that all villains having the same type as those originally living in 𝑥-th hole or 𝑦</p><p>-th hole live in the same half and the Iron Man can destroy that colony arrangement.</p><p>Two colony arrangements are considered to be different if there exists a hole such that different types of villains are present in that hole in the arrangements.<br>Input</p><p>The first line contains a string 𝑠<br>(2≤|𝑠|≤105), representing the initial colony arrangement. String 𝑠</p><p>can have both lowercase and uppercase English letters and its length is even.</p><p>The second line contains a single integer 𝑞<br>(1≤𝑞≤105</p><p>) — the number of questions.</p><p>The 𝑖<br>-th of the next 𝑞 lines contains two integers 𝑥𝑖 and 𝑦𝑖 (1≤𝑥𝑖,𝑦𝑖≤|𝑠|, 𝑥𝑖≠𝑦𝑖) — the two numbers given to the Jarvis for the 𝑖</p><p>-th question.<br>Output</p><p>For each question output the number of arrangements possible modulo 109+7</p><p>.<br>Examples<br>Input<br>Copy</p><p>abba<br>2<br>1 4<br>1 2</p><p>Output<br>Copy</p><p>2<br>0</p><p>Input<br>Copy</p><p>AAaa<br>2<br>1 2<br>1 3</p><p>Output<br>Copy</p><p>2<br>0</p><p>Input<br>Copy</p><p>abcd<br>1<br>1 3</p><p>Output<br>Copy</p><p>8</p><p>Note</p><p>Consider the first example. For the first question, the possible arrangements are “aabb” and “bbaa”, and for the second question, index 1<br>contains ‘a’ and index 2</p><p>contains ‘b’ and there is no valid arrangement in which all ‘a’ and ‘b’ are in the same half.</p>]]></content>
      
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 生成函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo瞎猴日记二</title>
      <link href="/hexo2/"/>
      <url>/hexo2/</url>
      
        <content type="html"><![CDATA[<h3 id="latex支持"><a href="#latex支持" class="headerlink" title="latex支持"></a>latex支持</h3><p>这个要个CDN(然而窝又不造是什么)，随便百度上拉来一个能用就行，不过貌似效果略差？</p><p>代码如下：</p><figure class="hljs highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">mathjax:</span><br><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">  global:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">  cdn:</span> <span class="hljs-attr">https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br></code></pre></td></tr></table></figure><p><br></p><h3 id="背景图-留坑"><a href="#背景图-留坑" class="headerlink" title="背景图(留坑)"></a>背景图(留坑)</h3><p>背景图的设置可以从$themes$文件夹下的$source/css/custom.styl$下去设置(前提是主题的作者很好心地给泥设置了这个选项)，然后仿照下面的代码去把背景设置一下就可以</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">body&#123;<br>    background-image:url(/images/background.jpg);<br>    background-attachment:fixed;<br>    background-repeat:repeat;<br>    background-size:contain;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是这个方案其实比较差，由于填充得比较暴力，所以对图片的要求比较刁钻。另外这个主题下中间的背景是被挡住的，所以对背景的要求也就变得更高了些。</p><p>目前想这找一些风景图来填充就可以，以后碰上就试一下就不刻意找了。</p><p><br></p><h3 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h3><p>有个语法之前忘了说<code>hexo new page pagename</code>意思是新建一个名为$pagename​$的功能页</p><p>然后$About\,me$页面和$Tag$页面都可以用这种方法去实现</p><p><br></p><h3 id="404-留坑"><a href="#404-留坑" class="headerlink" title="404(留坑)"></a>404(留坑)</h3><p>这个貌似要把网给部署到服务器上才能用，本地没办法弄，坑先留着。。</p><p><br></p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>窝写题解的时候格式还算是比较固定的？所以可以弄个模板上去，按照<a href="https://hexo.io/zh-cn/docs/writing#%E6%A8%A1%E7%89%88%EF%BC%88Scaffold%EF%BC%89" target="_blank" rel="noopener">官方文档</a>，在$scafflods$下建立一个$name.md$文件，然后用命令<code>hexo new name newpost</code>就可以了</p><p><br></p><h3 id="突然还想要一个会动的小人-留坑"><a href="#突然还想要一个会动的小人-留坑" class="headerlink" title="突然还想要一个会动的小人(留坑)"></a>突然还想要一个会动的小人(留坑)</h3><p>先给几个学习链接：</p><ol><li><p><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d</a></p></li><li><p><a href="https://haremu.com/p/205" target="_blank" rel="noopener">https://haremu.com/p/205</a></p></li><li><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" target="_blank" rel="noopener">https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02</a></li></ol><p>然后了解到有$live2d$这种技术，看了半天发现这技术过于硬核，所以打算拉一份代码就好了。。现有的模型其实也很少，所以没得挑。。</p><p>然后就直接链接到别人的$github$上把他的$live2d$拉了下来，这个要参考第一个链接，把$hexo-helper-live2d$下载完后，文档给出了自定义的模型的使用方法，直接套上去就可以。</p><p>小人说话的问题第二个链接貌似有给出解决方案可是窝一直鼓捣不出来。。</p><p>$live2d$好像自带半透明色像幽灵一样好恐怖5555</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo瞎猴日记一</title>
      <link href="/hexo1/"/>
      <url>/hexo1/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这个blog其实大一就做了一下，弄到hello world和学习了一下markdown之后就没再弄过了，至于为什么要重新来弄这个是因为这个CSDN真的是emmmmm</p><p>于是这里顺便发一下前任博客的链接<a href="https://blog.csdn.net/qkoqhh" target="_blank" rel="noopener">https://blog.csdn.net/qkoqhh</a></p><p>当时搭这博客的细节也忘得差不多了，流程大概是按照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a>来的，记得是装某个东西的时候有点问题？</p><p><br></p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>主题选的是<a href="https://github.com/AlynxZhou/hexo-theme-aria/" target="_blank" rel="noopener">Aria</a>，实用性很强，界面也非常舒服，而且，文档写得超详细！真是用心了，感谢作者<a href="http://aria.ismyonly.one/" target="_blank" rel="noopener">AlynxZhou</a>。</p><p>跟着文档把自己能够看懂的部分稍微设置了一下，然后根据自己的需求做了点修改。</p><p><br></p><h3 id="号"><a href="#号" class="headerlink" title="#号"></a>#号</h3><p>第一个是标题前面的#，这个的作用其实已经和文章目录有点重复了，反而可能会有点比较突兀，所以就想去掉</p><p>直接查看#的元素，发现他的类是headerlink，于是用grep在模板里面找到包含headerlink的文件，发现只有aria/source/css/post.styl有，于是删掉如下代码段就可以去掉了：</p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css">  .post-main &#123;<br>    a.headerlink &#123;<br>      border: none;<br>      &amp;:hover &#123;<br>        border: none;<br>      &#125;<br>      &amp;:active &#123;<br>        top: 0;<br>      &#125;<br>      &amp;::before &#123;<br>        content: "#";<br>        margin-right: 0.3em;<br>      &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当然其实应该可以做得更好，比如用好看一点的图片来代替#可能效果会更加不错，以后有时间可以来改改</p><p>(话说这个hexo没有css的高亮么。。明明在typora下有的说)</p><p><br></p><h3 id="Tag页面"><a href="#Tag页面" class="headerlink" title="Tag页面"></a>Tag页面</h3><p>另一个比较大的问题是hexo自身的问题（这个问题差点让窝弃了hexo），关于分类的，由于hexo不支持同级分类，所以今后窝如果要写一些类别有交叉的文章可能就会比较尴尬。</p><p>由于这是hexo自身的特性根本就没有办法改变，所以分类功能只能弃用。代替他的是标签，用标签的话就可以不用拘泥于严格的类别次序，但是这些标签是不能确定主次或者包含关系的，这个缺点比分类的好接受多了，毕竟大部分博客也是都这样的。</p><p>主题默认使用的tag-cloud窝认为是比较华而不实的，散乱的排列，仅靠大小来判定该分类的大小实在是emmmm</p><p>所以还是想弄成传统的标签，然而缺少知识的窝并不造怎么弄。决定去学一手<a href="http://tokitsukaze.live" target="_blank" rel="noopener">tokitsukaze的博客</a>，发现可以用tag-list（这个在手册上的辅助函数里有可窝当时并没有看懂？），而通过grep命令很容易知道tag-cloud是在/themes/aria/layout/tags.njk​里面生成的，然后仿照原来的tag-cloud的格式生成了tag-list。然后发现标签和数目并在一起相当难看，所以又去学了一首调节字体颜色大小，等调节完发现只能改数字，不能改标签，因为标签是个链接？！之后试了很多方法都没用。。只能妥协。。最后仿造了分类的配色方案将数字的颜色调了一下。。这个问题其实还是没有完全解决qaq</p><p>然后标签的顺序问题默认是按name​排序，如果想按文章数量排序要把​orderby设置成length，其他的就按手册上写就行。。</p><p>代码如下：</p><figure class="hljs highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">     <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"5"</span> <span class="hljs-attr">face</span>=<span class="hljs-string">"Verdana"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"black"</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tag-list"</span>&gt;</span><br>&#123;&#123;list_tags(&#123;orderby:"length",order:-1,show_count:true,class:tag,amount:0,style:"list"&#125;) &#125;&#125;<br>     <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br></code></pre></td></tr></table></figure><p><br></p><h3 id="生成摘要"><a href="#生成摘要" class="headerlink" title="生成摘要"></a>生成摘要</h3><p>另外有个小问题就是，文章摘要貌似只能按字数来算，然后不巧有篇文章开头就是图片，再加上图片大小的调整窝现在也没解决，所以那篇文章的前100字数已经占据了一页。。仔细一想其实窝好像从来就没有看过或者写过摘要（标题党），所以摘要对窝来说确实无关紧要（而且以后的文章中摘要说不定是题意= =），所以直接把摘要去了，把theme里面的_config.yml的auto_excerpt改成如下：</p><figure class="hljs highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">auto_excerpt:</span><br><span class="hljs-attr">    enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">    length:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><br></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>还有一个小问题就是图片的引用问题，有2种姿势：</p><ol><li><p>绝对路径，将图片统一放在source/images中，通过<code>![](/images/image.jpg)</code>访问他们</p></li><li><p>相对路径，通过将_config.yml的post_asset_folder选项修改为true后，以后执行<code>hexo new post_name</code>，还会额外生成post_name同名文件夹，然后可以直接引用文件夹。例如<code>![](image.jpg)</code></p></li></ol><p>一开始是想用相对路径的，然而发现每次建文件夹都没用就很难受，所以就把post_asset_older关了，然而之前的图片引用也一并失效了囧～～</p><p>所以考虑自己没多少图片的情况下就选择用绝对路径了</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shootingtest</title>
      <link href="/shootingtest/"/>
      <url>/shootingtest/</url>
      
        <content type="html"><![CDATA[<p>先上图</p><p>第二发</p><p><img src="/images/shootingtest2.png" alt=""></p><p>第三发</p><p><img src="/images/shootingtest1.png" alt=""></p><p>第一发好像是106左右吧。。忘了截图。。</p><p>emmm所以说底力是不是太弱了啊，还是没能达到泥裙人均水平qaq</p><p>说一下对各个弹幕的感觉：</p><h3 id="随机弹："><a href="#随机弹：" class="headerlink" title="随机弹："></a>随机弹：</h3><p>话说第一发随机弹到level6就挂了qaq</p><p>不过这里给窝感觉压力最大的确实是随机弹，作为最常见的弹幕练难一点也是必须的。。（信心受到了摧残</p><p>总的来说就是从level1开始就压力很大（主要是密度比较高），精神一直都非常集中，然后后面弹速再加快感觉就有点不行了qaq大概是到level15就有点乱扭了。。不过第三发好像还猴了蛮久的2333</p><p>看别人好像是侧下方躲避不过我还是比较喜欢正下硬杠2333其实说不定侧下方压力真的比较小呢。。（参考无双风神）</p><p>高速弹确实是硬伤，不过这次还让窝意识到自己对密度的承受能力其实也比较一般。。</p><p>所以随机弹一定要再多练啊多练啊。。</p><h3 id="自机狙："><a href="#自机狙：" class="headerlink" title="自机狙："></a>自机狙：</h3><p>相对来说比较轻松的一关。。</p><p>主要是注意折返。。不过到后面空间会越来越小，折返好像也缓解不了多少压力，然后逐渐陷入自闭。。那就在移动的过程中把前面的弹幕当成随机弹扭一扭吧。。在level20之前迎面而来的应该还都是些低速弹。。要是高速弹就呵呵。。</p><h3 id="交叉弹："><a href="#交叉弹：" class="headerlink" title="交叉弹："></a>交叉弹：</h3><p>感觉没怎么遇到过。。所以经验也不足。。</p><p>主要还是level15之前的都太水了。。而且弹速和密度的增长都比较慢。。所以前面的热身可以说是非常充分了，到后面也比较有感觉。。要是一开始上来level18可能就很槽。。</p><p>要形容一下感觉吧？就是在一个弹幕的轨迹上侧滑然后注意避开另一波弹幕？或者在2个轨道之间来回穿梭？？（反正是怎么方便怎么猴</p><p>这个可以练，提升空间还是有的。。</p><h3 id="旋涡弹："><a href="#旋涡弹：" class="headerlink" title="旋涡弹："></a>旋涡弹：</h3><p>好像之前都没听说过有这种弹幕= =!印象中属于这类的不多啊，水银之毒算是比较经典了。。然后还有就是绕圈圈（噩梦）？？</p><p>然后就全靠底力扭了。。所以结果貌似也比较一般？</p><p>感觉就是只是从一侧过来的就找缝钻就行了，没缝就在2批弹幕之间找（这里有缝的概率还是蛮大的），然后就要注意方向问题了。。反正不要跟着旋涡绕。。会晕。。</p><p>比较难遇到吧。。也没有刻意练的必要。。</p><h3 id="爆菊弹："><a href="#爆菊弹：" class="headerlink" title="爆菊弹："></a>爆菊弹：</h3><p>比较害怕的一类吧。。被正邪吓哭了qaq</p><p>感觉还是遇到妖梦的4符比较有信心吧，人家好歹都是直弹。。</p><p>所以也可以考虑练练。。</p><p>然后第三发貌似有段时间躲在侧方很舒服。。然而最后是自己慢慢被逼死没办法回到中间。。所以还是要尽量往中间走。。</p><p>这个热身也是比较足的。。主要就是要放开眼界找空间比较大的块去钻。。要频繁更新交换视野。。可以说是比较累了。。</p><p>不过这个对付正邪可能还有点难。。因为窝已经好几次撞人家脸上了（雾）</p><h3 id="全方位："><a href="#全方位：" class="headerlink" title="全方位："></a>全方位：</h3><p>没听过+2</p><p>听名字给窝的感觉就是紫妹终符。。不过好像和哆啦咪（EX道中）的比较类似？</p><p>前期热身也是很足的。。中期由于是按逆时针边绕边放弹，所以比较有可能会出现螺旋式的弹幕，出现了就很容易避开了。。其余的自己用底力猴一猴也是很ok的。。后期弹速和密度就变高了(主要是密度)，然后扭过了就放大视野找下一个比较空旷的块去钻吧。。压力大也就只能在小范围扭扭然后biu。。</p><p>不过感觉这个判定好迷啊。。好几次以为自己已经gg了结果好像没什么事？？</p><p>PS：这个测试的rpy窝到现在都不造要怎么存（捂脸</p>]]></content>
      
      
      
        <tags>
            
            <tag> stg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test and note of markdown</title>
      <link href="/test/"/>
      <url>/test/</url>
      
        <content type="html"><![CDATA[<h1 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><h3 id="Test-1"><a href="#Test-1" class="headerlink" title="Test"></a>Test</h3><p>qkoqhh is so juruo that he used more than two days to build this blog.It’s so lucky that the odd error disappeared without doing nothing.In conclusion,RP is very significant,especially to the problem of XuanXue.  </p><p>试试中文资不资辞蛙？<br>看来是资辞的。<br>下面学习试试引用</p><blockquote><p>苟利国家生死以，岂因祸福避趋之。<br>                                                –最初的网红</p></blockquote><p>引用中的引用？？</p><blockquote><blockquote><p>0.0</p></blockquote></blockquote><blockquote><blockquote><p>=w=</p></blockquote></blockquote><p>还有引用中的标题？</p><blockquote><h2 id="他改变了中国"><a href="#他改变了中国" class="headerlink" title="他改变了中国"></a>他改变了中国</h2><p>emmmm此处省略一万字。。</p></blockquote><p><strong>试试粗鄙</strong></p><p>有序列表 +号可以用*或-代替。。</p><ul><li>red<br>sad</li><li>green</li><li>blue</li></ul><p>还有空个行会有一种奇怪的现象</p><ul><li><p>red</p></li><li><p>green</p></li><li>blue</li></ul><p>无序列表 好像不管.前面的数字耶。。</p><ol start="8"><li><strong>123</strong></li><li>233</li><li>432</li></ol><ul><li>喵喵喵喵？<blockquote><p>   项目中的引用？？<br>这样？？</p></blockquote></li></ul><p>贴代码：<br><figure class="hljs highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> inc(i,l,r) for(int i=l;i&lt;=r;i++)</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br></code></pre></td></tr></table></figure></p><p>试试分割线</p><hr><hr><hr><hr><p>好像这个”***”分割线能引用的说。。。</p><hr><p>试试行内式链接？？<br>对方给你扔了一个<a href="http://www.bilibili.com" title="duangduangduang" target="_blank" rel="noopener">链接</a><br><del>好像还能用相对路径？算了感觉这个没什么用。。</del></p><p>接下来是参考式链接。。。<br>对方又给你扔了一个<a href="http://www.baidu.com" title="duang" target="_blank" rel="noopener">链接</a><br>引号的内容貌似可以在attach的时候显示粗来。。<br>定义参考式链接的时候好像还可以用&lt;&gt;,什么都没有不就好了嘛。。干嘛弄得这么麻烦。。</p><p>再次运行了一下，获得以下结论：</p><ol><li>链接的http不能省。。</li><li>好像我的preview和实际效果还有点差距？</li><li>编辑时直接刷新页面就可以看到效果了。。</li><li>preview硬换行好像只有一个缩进的效果，要换行必须用软换行。。而hexo好像软硬通吃。。所以preview少用吧。。</li></ol><p>顺势学学绝对路径插入图片<br><img src="https://dn-Myg6wSTV.qbox.me/14868d18eabae4a6fbb5.jpg" alt=""><br>emmmm好像不能设置图片大小呀。。以后再找解决方案吧。。。<br>自己的本地文件要上传到github再获取链接才行。。。这里还顺便再图片上弄了个链接<br><a href="http://blog.csdn.net/qkoqhh" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/qkoqhh/picture/master/resource/0bc564cb0a46f21f44e52200f1246b600d33aea4.jpg" alt=""> </a></p><p>（然后emmmm图片来源其实早都没了</p><p>文字强调？？<br><em>qkoqhh</em><br><em>qkoqhh</em><br><strong>qkoqhh</strong><br><strong>qkoqhh</strong><br>emmmm2个*或_就是粗体。。1个就话就是斜体。。</p><p>标记一小段代码？？用 ‘return 0;’ 就好了耶0v0</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404 Not Found</title>
      <link href="//404.html"/>
      <url>//404.html</url>
      
        <content type="html"><![CDATA[<div class="alert-red"><font size="6"><strong>这里真的什么都没有啦QAQ</strong></font></div><p><img src="/images/404.jpg" alt=""></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<div class="alert-green"><font size="6"><strong>欢迎您访问此博客</strong></font></div><h1 id="qkoqhh"><a href="#qkoqhh" class="headerlink" title="qkoqhh"></a>qkoqhh</h1><ul><li>现役 $ACM$ 选手，特长是端茶送水。队名：<em>生鱼忧患死鱼安乐</em>。被 $2$ 位队友( <a href="http://www.cnblogs.com/wang9897/" target="_blank" rel="noopener">$wang9897$</a> 、 <a href="http://www.cnblogs.com/greenty1208/" target="_blank" rel="noopener">$Grennty\underline{}Q$</a> )带飞。由于本人演技过于高超故只拿 $2$ 银 $2$ 铜 $1$ 铁。</li><li>伪车万厨，喜欢 $STG​$ 但是停飞多时，目前只有 $7N2H2EX​$，没有打过 $E​$，不擅长打 $neta​$，但十分擅长抱 $B​$ 撞，幻想成为 $L​$ 党。偶尔和 <a href="arch0n.sumblog.cn">$Archon​$</a> 打打则。</li><li>$qkoqhh​$ 这个名字是高考账号原始密码，不必过多臆断含义 _(:3 」∠)_</li><li>$XDU​$ 摸鱼本科生，专业是网络空间安全然而自己没有任何专业技能。</li><li>语言极差，可能我的文章会写得很小学生一样，但是格式上会要求自己。</li><li>喜欢看番，最喜欢的番剧是魔法少女小圆和 $Steins\,Gate​$ 。喜欢可爱(怜)的金发女孩wwww</li></ul><p><br></p><h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><p>$QQ:1374363741​$</p><p>$Email:$<a href="mailto:qkoqhh@163.com" target="_blank" rel="noopener">$qkoqhh@163.com$</a></p><p>$Telegram:​$<a href="https://t.me/qkoqhh" target="_blank" rel="noopener">$@qkoqhh​$</a></p><p>直接在这里联系我也可以，欢迎交流 _(:3 」∠)_</p><p><br></p><h1 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h1><p>以前在 <a href="https://blog.csdn.net/qkoqhh" target="_blank" rel="noopener">$CSDN​$</a> ，渐渐对 $CSDN​$ 各种不适故迁到此地。搭一下博客也是对自己的锻炼啦。。</p><p>缺少前端知识所以还有各种缺点，一些坑先了留着。欢迎在下方评论提出博客出现的种种问题 _(:3 」∠)_</p><p>搭然后这个博客主要是来写写一些题解什么的，退役后就来写一些学习笔记（当然退役前也会写的啦</p><p>写文章会尽量按照 <a href="https://loj.ac/article/6" target="_blank" rel="noopener">$LOJ$ 的排版格式</a> (当然题面暴力贴的只能凑合着看</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
